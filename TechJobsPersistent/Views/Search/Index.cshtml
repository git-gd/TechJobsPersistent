<div class="container body-content">

    <h1>@ViewBag.title</h1>

    <form action="/search/results" method="post">
        <h2>Search by:</h2>

        <div>
            @foreach (var column in ViewBag.columns)
            {
                <span>
                    <input type="radio" name="searchType" id="@column.Key" value="@column.Key" checked="@column.Key.Equals(ViewBag.searchType)" />
                    <label for="@column.Key">@column.Value</label>
                </span>
            }
        </div>

        <div>
            <label for="searchTerm">Keyword:</label>
            <input type="text" name="searchTerm" id="searchTerm" />
        </div>

        <input type="submit" value="Search" />
    </form>

    <hr />

    @if (ViewBag.jobs != null)
    {
        <table class="table table-striped">
            @foreach (var job in ViewBag.jobs)
            {
                <tr>
                    <td>
                        <p>ID: @job.JobId</p>
                        <p>Name: @job.Name</p>
                        <p>Employer: @job.EmployerName</p>
                        <p>Skills: @job.SkillText</p>
                    </td>
                </tr>
            }
        </table>
    }
</div>
<script>
    function HighLight() {
        let searched = "@ViewBag.searchTerm";
        if (searched !== "") {
            let pTags = document.getElementsByTagName("p");
            for (let i = 0; i < pTags.length; i++)
            {
                let oldTxt = pTags[i].innerHTML;
                let txtIdx = null;

                /* Find and skip everything before the colon */
                /* SWITCH the search type so we only highlight the searched field(s) */
                switch("@ViewBag.searchType"){
                    case "employer":
                        txtIdx = oldTxt.indexOf("Employer: ");
                        break;
                    case "skill":
                        txtIdx = oldTxt.indexOf("Skills: ");
                        break;
                    default:
                        txtIdx = oldTxt.indexOf(":") + 1;
                }

                /* If we did not find a match skip processing and continue with the loop */
                if (txtIdx == -1) continue;                

                /* Find first searchterm */
                txtIdx = oldTxt.toLowerCase().indexOf(searched.toLowerCase(), txtIdx);

                /* Store the search result index */
                let tmpIdx = txtIdx;

                /* if search was not found set newTxt to oldTxt, otherwise copy the first part of oldTxt to newTxt */
                let newTxt = (txtIdx > -1) ? oldTxt.substr(0, txtIdx) : oldTxt;

                while (txtIdx >= 0 && txtIdx < oldTxt.length) {
                    /* add code to highlight the searchterm */
                    newTxt += "<span style='color:red;'>";
                    newTxt += oldTxt.substr(txtIdx, searched.length);
                    newTxt += "</span>";

                    /* advance the index past the length of the searchterm string we just added */
                    txtIdx += searched.length;
                                        
                    /* save the index of where we last copied text before checking for another match */
                    tmpIdx = txtIdx;
                    txtIdx = oldTxt.toLowerCase().indexOf(searched.toLowerCase(), txtIdx);

                    /* if no new match is found, add the last of the oldTxt string to the end of newTxt */
                    /* otherwise if a match is found, add the text between the last found and next found indexes */
                    newTxt += (txtIdx < 0) ? oldTxt.substr(tmpIdx) : oldTxt.substr(tmpIdx, txtIdx - tmpIdx);
                }

                if (newTxt != oldTxt) pTags[i].innerHTML = newTxt;
            }
        }
    }
    window.onload = HighLight();
</script>